definitions:
  models.Credentials:
    properties:
      email:
        example: emirkovacevic@protonmail.com
        type: string
      password:
        example: password123As!
        type: string
    required:
    - email
    - password
    type: object
  models.ItemNew:
    properties:
      description:
        example: My Item Description
        type: string
      name:
        example: My Item
        type: string
      price:
        $ref: '#/definitions/models.Price'
      quantity:
        example: 123
        type: integer
    required:
    - description
    - name
    - price
    - quantity
    type: object
  models.OrganisationNew:
    properties:
      address:
        example: 123 Main St
        type: string
      country_code:
        example: 36
        type: integer
      currency_code:
        example: 840
        type: integer
      description:
        example: My Organization Description
        type: string
      logo:
        example: https://www.example.com/logo.png
        type: string
      name:
        example: My Organization
        type: string
      phone:
        example: "1234567890"
        type: string
      zip_code:
        example: "12345"
        type: string
    required:
    - address
    - country_code
    - currency_code
    - description
    - name
    - phone
    - zip_code
    type: object
  models.Price:
    properties:
      amount:
        example: 123
        type: number
      currency:
        type: string
    required:
    - amount
    type: object
  models.UserNew:
    properties:
      email:
        example: emirkovacevic@protonmail.com
        type: string
      first_name:
        example: Emir
        type: string
      last_name:
        example: Kovacevic
        type: string
      location:
        example: New York
        type: string
      password:
        example: password123As!
        type: string
    required:
    - email
    - first_name
    - last_name
    - location
    - password
    type: object
  responses.AuthResponse:
    properties:
      data:
        additionalProperties: true
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
  responses.ItemResponse:
    properties:
      data:
        additionalProperties: true
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
  responses.OrganisationResponse:
    properties:
      data:
        additionalProperties: true
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
  responses.UserResponse:
    properties:
      data:
        additionalProperties: true
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.AuthResponse'
      summary: Log in a user
      tags:
      - Auth
  /api/auth/logout:
    post:
      consumes:
      - application/json
      description: Logs out a user and clears the session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.AuthResponse'
      summary: Logout a user
      tags:
      - Auth
  /api/helper/countries:
    get:
      consumes:
      - application/json
      description: Get all countries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ItemResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ItemResponse'
      summary: Get all countries
      tags:
      - Helper
  /api/helper/currencies:
    get:
      consumes:
      - application/json
      description: Get all currencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ItemResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ItemResponse'
      summary: Get all currencies
      tags:
      - Helper
  /api/item:
    post:
      consumes:
      - application/json
      description: Creates an item
      parameters:
      - description: Item data
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.ItemNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ItemResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ItemResponse'
      security:
      - BearerAuth: []
      summary: Create an item
      tags:
      - Item
  /api/item/{itemId}:
    get:
      consumes:
      - application/json
      description: Gets an item
      parameters:
      - description: Item ID
        in: path
        name: itemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ItemResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ItemResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ItemResponse'
      security:
      - BearerAuth: []
      summary: Get an item
      tags:
      - Item
  /api/items:
    get:
      consumes:
      - application/json
      description: Gets items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ItemResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ItemResponse'
      security:
      - BearerAuth: []
      summary: Get items
      tags:
      - Item
  /api/organisation:
    get:
      consumes:
      - application/json
      description: Gets an organisation
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
      security:
      - BearerAuth: []
      summary: Get an organisation
      tags:
      - Organisation
    post:
      consumes:
      - application/json
      description: Creates an organisation
      parameters:
      - description: Organisation data
        in: body
        name: organisation
        required: true
        schema:
          $ref: '#/definitions/models.OrganisationNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
      security:
      - BearerAuth: []
      summary: Create an organisation
      tags:
      - Organisation
  /api/organisation/{organisationId}:
    delete:
      consumes:
      - application/json
      description: Deletes an organisation
      parameters:
      - description: Organisation ID
        in: path
        name: organisationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
      security:
      - BearerAuth: []
      summary: Delete an organisation
      tags:
      - Organisation
    put:
      consumes:
      - application/json
      description: Updates an organisation
      parameters:
      - description: Organisation ID
        in: path
        name: organisationId
        required: true
        type: string
      - description: Organisation object to be updated
        in: body
        name: organisation
        required: true
        schema:
          $ref: '#/definitions/models.OrganisationNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.OrganisationResponse'
      security:
      - BearerAuth: []
      summary: Update an organisation
      tags:
      - Organisation
  /api/user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.UserResponse'
      summary: Create a new user
      tags:
      - Users
  /api/user/{userId}:
    delete:
      consumes:
      - application/json
      description: Delete a user with the given user ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.UserResponse'
      security:
      - BearerAuth: []
      summary: Delete a user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Retrieves a user by ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.UserResponse'
      security:
      - BearerAuth: []
      summary: Get user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update a user with the given user ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: User object to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.UserResponse'
      security:
      - BearerAuth: []
      summary: Update a user
      tags:
      - Users
  /api/user/current:
    get:
      consumes:
      - application/json
      description: Get the details of the session user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.UserResponse'
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: Get current user
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
